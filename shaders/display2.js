export default "\nvarying vec2 coords;\n\nuniform sampler2D iChannel1;\n#define ch1 iChannel1\n\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec3 mixN(vec3 a, vec3 b, float k)\n{\n    return sqrt(mix(a*a, b*b, clamp(k,0.,1.)));\n}\n\nvec4 V(vec2 p)\n{\n    return pixel(ch1, p);\n}\nvec3 tanh3(vec3 g){\n    return 1.0/(1.0+exp(-2.0*g))*2.0-1.0;\n}\nvoid main()\n{\n    vec4 col=vec4(0.0);\n\t //R = iResolution.xy;\n    time = iTime; \n    vec2 pos=coords*iResolution.xy;\n   // pos = R*0.5 + (pos-R/2.0)*2.0;\n    ivec2 p = ivec2(pos);\n    \n    // vec8 data = texelish(XT,VT,MT, pos);\n    particle P = getParticle(pos);\n\n    //border render\n    vec3 Nb = bN(P.X);\n    float bord = smoothstep(2.*border_h,border_h*0.5,border(pos));\n    \n    vec3 dx = vec3(-1., 0., 1.);\n\n    vec4 rho = (V(pos)+V(pos + dx.zy)+V(pos + dx.xy)+V(pos + dx.yz)+V(pos + dx.yx))/5.0;\n    float g=2.0;\n    vec4 grad = -1.0/g*vec4(V(pos + dx.zy*g).zw - V(pos + dx.xy*g).zw,\n                         V(pos + dx.yz*g).zw - V(pos + dx.yx*g).zw);\n    vec2 N = pow(length(grad.xz),0.2)*normalize(grad.xz+1e-5);\n    float specular = pow(max(dot(N, Dir(1.4)), 0.), 3.5);\n    float specularb = G(0.4*(Nb.zz - border_h))*pow(max(dot(Nb.xy, Dir(1.4)), 0.), 3.);\n    \n    float a = pow(smoothstep(fluid_rho*0., fluid_rho*2., rho.z),0.1);\n    float b = exp(-1.7*smoothstep(fluid_rho*1., fluid_rho*7.5, rho.z));\n    vec3 col0 = P.C;//vec3(1., 0.5, 0.);\n    vec3 col1 = P.C;//vec3(0.1, 0.4, 1.);\n\tvec3 fcol =P.C;// mixN(col0, col1, tanh3(vec3(3.*(rho.w - 0.7))).x*0.5 + 0.5);\n    // Output to screen\n    col = vec4(3.);\n    col.xyz = mixN(col.xyz, fcol.xyz*(1.5*b + specular*5.), a);\n    col.xyz = mixN(col.xyz, 0.*vec3(0.5,0.5,1.), bord);\n    col.xyz = tanh3(col.xyz);\n    col.w=1.0;\n    // col.xyz=vec3(0.0);\n    // col.xy=P.X-pos;\n    gl_FragColor=col;\n   // particle Pg = getParticle(vec4(1.0,0.5,0.0,1.0), pos);\n    //gl_FragColor= vec4(saveParticle(Pg, pos).xy,0.0,1.0);\n//  gl_FragColor=vec4(vec3(P.M.x),1.0);\n}"